swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
host: localhost:3001
basePath: /api/v1
tags:
  - name: transaction
    description: Everything about your transactions
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: user
    description: Operations about user
schemes:
  - http
paths:
  /account/transactions:
    get:
      security:
      - Bearer: []
      tags:
        - transaction
      summary: Return a list of transactions
      description: Get all transactions
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
      operationId: getAallTransaction
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/Transaction'
        '404':
          description: transactions not found
        '500':
          description: Internal Server Error
    post:
      security:
      - Bearer: []
      tags:
        - transaction
      summary: Add a new transaction 
      description: Add a new transaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
      operationId: addTransaction
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/Transaction'
        '404':
          description: Invalid transactionId
        '500':
          description: Internal Server Error
  /account/transactions/{transactionId}:
    get:
      security:
      - Bearer: []
      tags:
        - transaction
      summary: Find transaction by ID
      description: Returns a single transaction
      operationId: gettransactionById
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - name: transactionId
          in: path
          description: ID of transaction to return
          type: string
          required: true
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Transaction'
        '404':
          description: transaction not found
        '500':
          description: Internal Server Error
    put:
      security:
      - Bearer: []
      tags:
        - transaction
      summary: Update an existing transaction by ID
      description: Update an existing transaction by ID
      operationId: updateTransaction
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - name: transactionId
          in: path
          description: ID of transaction to return
          type: string
          required: true
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/Transaction'
        '404':
          description: Invalid transactionId
        '500':
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - transaction
      summary: Delete a transaction by ID
      description: delete a transaction by ID
      operationId: deletetransaction
      parameters:
      - in: header
        name: Authorization
        description: Attach Bearer JWT token
        type: string
        required: true
      - name: transactionId
        in: path
        description: ID of transaction to return
        type: string
        required: true
      responses:
        '404':
          description: Invalid transactionId
        '500':
          description: Internal Server Error
  /user/login:
    post:
      tags:
        - user 
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid transactionId
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - user
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - user
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - user
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          type: string
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  Transaction:
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: name of transaction
        Amount: 
          type: number
          example: 500
        comment: 
          type: string
        recipient: 
          type: string
          example: Dupont
        created: 
          type: string
          example: "01/01/2012"
      xml:
        name: transaction
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
